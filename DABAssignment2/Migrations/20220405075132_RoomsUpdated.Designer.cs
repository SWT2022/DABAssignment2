// <auto-generated />
using System;
using DABAssignment2;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DABAssignment2.Migrations
{
    [DbContext(typeof(MuniDbContext))]
    [Migration("20220405075132_RoomsUpdated")]
    partial class RoomsUpdated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DABAssignment2.Models.Location", b =>
                {
                    b.Property<long>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LocationId"), 1L, 1);

                    b.Property<int>("Access_code")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("Availability")
                        .HasColumnType("bit");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("DABAssignment2.Models.LocationHolidays", b =>
                {
                    b.Property<DateTime>("Holiday")
                        .HasColumnType("datetime2");

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.HasKey("Holiday", "LocationId");

                    b.HasIndex("LocationId");

                    b.ToTable("LocationHolidays");
                });

            modelBuilder.Entity("DABAssignment2.Models.LocationOpeningHours", b =>
                {
                    b.Property<DateTime>("Opening")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Closing")
                        .HasColumnType("datetime2");

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.HasKey("Opening", "Closing", "LocationId");

                    b.HasIndex("LocationId");

                    b.ToTable("LocationOpeningHours");
                });

            modelBuilder.Entity("DABAssignment2.Models.LocationsProperties", b =>
                {
                    b.Property<long>("LocationsPropertiesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LocationsPropertiesId"), 1L, 1);

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("PropName")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("LocationsPropertiesId");

                    b.HasIndex("LocationId");

                    b.HasIndex("PropName");

                    b.ToTable("LocationsProperties");
                });

            modelBuilder.Entity("DABAssignment2.Models.Member", b =>
                {
                    b.Property<long>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MemberId"), 1L, 1);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("MemberId");

                    b.ToTable("Members");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Member");
                });

            modelBuilder.Entity("DABAssignment2.Models.MembersLocationsReservations", b =>
                {
                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ReservationBegin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReservationEnd")
                        .HasColumnType("datetime2");

                    b.Property<long>("MemberId")
                        .HasColumnType("bigint");

                    b.HasKey("LocationId", "ReservationBegin", "ReservationEnd");

                    b.HasIndex("MemberId");

                    b.ToTable("MembersLocationsReservations");
                });

            modelBuilder.Entity("DABAssignment2.Models.MembersRoomsReservations", b =>
                {
                    b.Property<long>("RoomId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ReservationBegin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReservationEnd")
                        .HasColumnType("datetime2");

                    b.Property<long>("MemberId")
                        .HasColumnType("bigint");

                    b.HasKey("RoomId", "ReservationBegin", "ReservationEnd");

                    b.HasIndex("MemberId");

                    b.ToTable("MembersRoomsReservations");
                });

            modelBuilder.Entity("DABAssignment2.Models.Properties", b =>
                {
                    b.Property<string>("PropName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("PropName");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("DABAssignment2.Models.Room", b =>
                {
                    b.Property<long>("RoomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RoomId"), 1L, 1);

                    b.Property<int>("Access_code")
                        .HasColumnType("int");

                    b.Property<bool>("Availability")
                        .HasColumnType("bit");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint");

                    b.HasKey("RoomId");

                    b.HasIndex("LocationId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("DABAssignment2.Models.RoomHolidays", b =>
                {
                    b.Property<DateTime>("Holiday")
                        .HasColumnType("datetime2");

                    b.Property<long>("RoomId")
                        .HasColumnType("bigint");

                    b.HasKey("Holiday", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomHolidays");
                });

            modelBuilder.Entity("DABAssignment2.Models.RoomOpeningHours", b =>
                {
                    b.Property<DateTime>("Opening")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Closing")
                        .HasColumnType("datetime2");

                    b.Property<long>("RoomId")
                        .HasColumnType("bigint");

                    b.HasKey("Opening", "Closing", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("RoomOpeningHours");
                });

            modelBuilder.Entity("DABAssignment2.Models.SocietiesMembers", b =>
                {
                    b.Property<long>("SocietiesMembersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SocietiesMembersId"), 1L, 1);

                    b.Property<long>("MemberId")
                        .HasColumnType("bigint");

                    b.Property<long>("SocietyId")
                        .HasColumnType("bigint");

                    b.HasKey("SocietiesMembersId");

                    b.HasIndex("MemberId");

                    b.HasIndex("SocietyId");

                    b.ToTable("SocietiesMembers");
                });

            modelBuilder.Entity("DABAssignment2.Models.Society", b =>
                {
                    b.Property<long>("SocietyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SocietyId"), 1L, 1);

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<long>("CVR_Number")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("SocietyId");

                    b.ToTable("Societies");
                });

            modelBuilder.Entity("DABAssignment2.Models.Chairmen", b =>
                {
                    b.HasBaseType("DABAssignment2.Models.Member");

                    b.Property<string>("CPR_number")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("HomeAdress")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasDiscriminator().HasValue("Chairmen");
                });

            modelBuilder.Entity("DABAssignment2.Models.LocationHolidays", b =>
                {
                    b.HasOne("DABAssignment2.Models.Location", "Location")
                        .WithMany("Holidays")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("DABAssignment2.Models.LocationOpeningHours", b =>
                {
                    b.HasOne("DABAssignment2.Models.Location", "Location")
                        .WithMany("OpeningHours")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("DABAssignment2.Models.LocationsProperties", b =>
                {
                    b.HasOne("DABAssignment2.Models.Location", "Location")
                        .WithMany("LocationsProperties")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DABAssignment2.Models.Properties", "Property")
                        .WithMany("LocationsProperties")
                        .HasForeignKey("PropName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("DABAssignment2.Models.MembersLocationsReservations", b =>
                {
                    b.HasOne("DABAssignment2.Models.Location", "Location")
                        .WithMany("Reservations")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DABAssignment2.Models.Member", "Member")
                        .WithMany("LocationsReservations")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("DABAssignment2.Models.MembersRoomsReservations", b =>
                {
                    b.HasOne("DABAssignment2.Models.Member", "Member")
                        .WithMany("RoomsReservations")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DABAssignment2.Models.Room", "Room")
                        .WithMany("Reservations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DABAssignment2.Models.Room", b =>
                {
                    b.HasOne("DABAssignment2.Models.Location", "Location")
                        .WithMany("Rooms")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("DABAssignment2.Models.RoomHolidays", b =>
                {
                    b.HasOne("DABAssignment2.Models.Room", "Room")
                        .WithMany("Holidays")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DABAssignment2.Models.RoomOpeningHours", b =>
                {
                    b.HasOne("DABAssignment2.Models.Room", "Room")
                        .WithMany("OpeningHours")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("DABAssignment2.Models.SocietiesMembers", b =>
                {
                    b.HasOne("DABAssignment2.Models.Member", "Member")
                        .WithMany("SocietiesMembers")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DABAssignment2.Models.Society", "Society")
                        .WithMany("SocietiesMembers")
                        .HasForeignKey("SocietyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Society");
                });

            modelBuilder.Entity("DABAssignment2.Models.Location", b =>
                {
                    b.Navigation("Holidays");

                    b.Navigation("LocationsProperties");

                    b.Navigation("OpeningHours");

                    b.Navigation("Reservations");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("DABAssignment2.Models.Member", b =>
                {
                    b.Navigation("LocationsReservations");

                    b.Navigation("RoomsReservations");

                    b.Navigation("SocietiesMembers");
                });

            modelBuilder.Entity("DABAssignment2.Models.Properties", b =>
                {
                    b.Navigation("LocationsProperties");
                });

            modelBuilder.Entity("DABAssignment2.Models.Room", b =>
                {
                    b.Navigation("Holidays");

                    b.Navigation("OpeningHours");

                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("DABAssignment2.Models.Society", b =>
                {
                    b.Navigation("SocietiesMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
